{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\getkp\\\\Desktop\\\\Sample_Git\\\\chat-app\\\\chat-app-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4000\"); // Backend URL\n\nconst App = () => {\n  _s();\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  // Join room\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  // Send message\n  const sendMessage = () => {\n    const messageData = {\n      room,\n      message\n    };\n    socket.emit(\"send_message\", messageData);\n    setMessages(prev => [...prev, messageData]); // Local messages\n    setMessage(\"\");\n  };\n\n  // Receive message\n  socket.on(\"receive_message\", data => {\n    setMessages(prev => [...prev, data]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Room ID\",\n      onChange: e => setRoom(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \"Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \": \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"a8M9fQQICRmStKQtEkCtNnjKteE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","io","jsxDEV","_jsxDEV","socket","connect","App","_s","room","setRoom","message","setMessage","messages","setMessages","joinRoom","emit","sendMessage","messageData","prev","on","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/getkp/Desktop/Sample_Git/chat-app/chat-app-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io.connect(\"http://localhost:4000\"); // Backend URL\n\nconst App = () => {\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  // Join room\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  // Send message\n  const sendMessage = () => {\n    const messageData = { room, message };\n    socket.emit(\"send_message\", messageData);\n    setMessages((prev) => [...prev, messageData]); // Local messages\n    setMessage(\"\");\n  };\n\n  // Receive message\n  socket.on(\"receive_message\", (data) => {\n    setMessages((prev) => [...prev, data]);\n  });\n\n  return (\n    <div>\n      <h1>Chat Application</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Room ID\"\n        onChange={(e) => setRoom(e.target.value)}\n      />\n      <button onClick={joinRoom}>Join Room</button>\n\n      <input\n        type=\"text\"\n        placeholder=\"Message\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n\n      <div>\n        <h3>Messages:</h3>\n        {messages.map((msg, index) => (\n          <p key={index}>\n            <strong>{msg.room}</strong>: {msg.message}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}